[[["e290ba50-51cf-485f-bf19-fc1005982d45",{"pageContent":"# Contributing to LangChain\n\n👋 Hi there! Thank you for even being interested in contributing to LangChain.\nAs an open source project in a rapidly developing field, we are extremely open\nto contributions, whether it be in the form of a new feature, improved infra, or better documentation.\n\nTo contribute to this project, please follow a [\"fork and pull request\"](https://docs.github.com/en/get-started/quickstart/contributing-to-projects) workflow. Please do not try to push directly to this repo unless you are a maintainer.\n\n## Quick Links\n\n### Not sure what to work on?\n\nIf you are not sure what to work on, we have a few suggestions:","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/CONTRIBUTING.md","loc":{"lines":{"from":1,"to":13}}}}],["f6894556-908d-4ef3-b30f-11a7a671ef44",{"pageContent":"## Quick Links\n\n### Not sure what to work on?\n\nIf you are not sure what to work on, we have a few suggestions:\n\n- Look at the issues with the [help wanted](https://github.com/hwchase17/langchainjs/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22) label. These are issues that we think are good targets for new contributors. If you are interested in working on one of these, please comment on the issue so that we can assign it to you. And any questions let us know, we're happy to guide you!\n- At the moment our main focus is reaching parity with the Python version across both [integrations](https://langchain.com/integrations.html) and [features](https://langchain.com/features.html). If you are interested in working on a specific integration or feature, just pick anything from those lists not done yet, please let us know and we can help you get started.\n\n### New abstractions","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/CONTRIBUTING.md","loc":{"lines":{"from":13,"to":22}}}}],["66433605-c8de-4a25-afb4-5aa0229a8ad9",{"pageContent":"### New abstractions\n\nWe are currently trying to keep API parity between the Python and JS versions of LangChain, where possible. As such we ask that if you have an idea for a new abstraction, please open an issue first to discuss it. This will help us make sure that the API is consistent across both versions. If you're not sure what to work on, we recommend looking at the links above first.\n\n## Want to add a specific integration?","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/CONTRIBUTING.md","loc":{"lines":{"from":22,"to":26}}}}],["152380e0-1214-43cb-81df-76b8b756707f",{"pageContent":"## Want to add a specific integration?\n\nLangChain supports several different types of integrations with third-party providers and frameworks, including LLM providers (e.g. [OpenAI](https://github.com/hwchase17/langchainjs/blob/main/langchain/src/llms/openai.ts)), vector stores (e.g. [FAISS](https://github.com/ewfian/langchainjs/blob/main/langchain/src/vectorstores/faiss.ts)), document loaders (e.g. [Apify](https://github.com/hwchase17/langchainjs/blob/main/langchain/src/document_loaders/web/apify_dataset.ts)) persistent message history stores (e.g. [Redis](https://github.com/hwchase17/langchainjs/blob/main/langchain/src/stores/message/redis.ts)), and more.\n\nWe welcome such contributions, but ask that you read our dedicated [integration contribution guide](https://github.com/hwchase17/langchainjs/blob/main/.github/contributing/INTEGRATIONS.md) for specific details and patterns to consider before opening a pull request.\n\n## 🗺️Contributing Guidelines\n\n### 🚩GitHub Issues","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/CONTRIBUTING.md","loc":{"lines":{"from":26,"to":34}}}}],["35413d6b-1042-4b49-8f33-49885d74ed9a",{"pageContent":"## 🗺️Contributing Guidelines\n\n### 🚩GitHub Issues\n\nOur [issues](https://github.com/hwchase17/langchainjs/issues) page is kept up to date\nwith bugs, improvements, and feature requests. There is a taxonomy of labels to help\nwith sorting and discovery of issues of interest. These include:\n\n- prompts: related to prompt tooling/infra.\n- llms: related to LLM wrappers/tooling/infra.\n- chains\n- utilities: related to different types of utilities to integrate with (Python, SQL, etc.).\n- agents\n- memory\n- applications: related to example applications to build\n\nIf you start working on an issue, please assign it to yourself.\n\nIf you are adding an issue, please try to keep it focused on a single modular bug/improvement/feature.\nIf the two issues are related, or blocking, please link them rather than keep them as one single one.","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/CONTRIBUTING.md","loc":{"lines":{"from":34,"to":53}}}}],["5e9eba72-8582-413c-be6f-93e94afb66b3",{"pageContent":"We will try to keep these issues as up to date as possible, though\nwith the rapid rate of develop in this field some may get out of date.\nIf you notice this happening, please just let us know.\n\n### 🙋Getting Help\n\nAlthough we try to have a developer setup to make it as easy as possible for others to contribute (see below)\nit is possible that some pain point may arise around environment setup, linting, documentation, or other.\nShould that occur, please contact a maintainer! Not only do we want to help get you unblocked,\nbut we also want to make sure that the process is smooth for future contributors.\n\nIn a similar vein, we do enforce certain linting, formatting, and documentation standards in the codebase.\nIf you are finding these difficult (or even just annoying) to work with,\nfeel free to contact a maintainer for help - we do not want these to get in the way of getting\ngood code into the codebase.\n\n### 🏭Release process\n\n> TODO:","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/CONTRIBUTING.md","loc":{"lines":{"from":55,"to":73}}}}],["e3c3d2a7-a77b-4551-81c4-4991d9a451c1",{"pageContent":"### 🏭Release process\n\n> TODO:\n\nAs of now, LangChain has an ad hoc release process: releases are cut with high frequency via by\na developer and published to [npm](https://www.npmjs.com/package/langchain).\n\nLangChain follows the [semver](https://semver.org/) versioning standard. However, as pre-1.0 software,\neven patch releases may contain [non-backwards-compatible changes](https://semver.org/#spec-item-4).\n\nIf your contribution has made its way into a release, we will want to give you credit on Twitter (only if you want though)!\nIf you have a Twitter account you would like us to mention, please let us know in the PR or in another manner.\n\n## 🚀Quick Start\n\n### Tooling\n\nThis project uses the following tools, which are worth getting familiar\nwith if you plan to contribute:","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/CONTRIBUTING.md","loc":{"lines":{"from":73,"to":91}}}}],["fda6bf27-9ee4-482c-afa0-b51ed41d2921",{"pageContent":"## 🚀Quick Start\n\n### Tooling\n\nThis project uses the following tools, which are worth getting familiar\nwith if you plan to contribute:\n\n- **[yarn](https://yarnpkg.com/) (v3.4.1)** - dependency management\n- **[eslint](https://eslint.org/)** - enforcing standard lint rules\n- **[prettier](https://prettier.io/)** - enforcing standard code formatting\n- **[jest](https://jestjs.io/)** - testing code\n- **[TypeDoc](https://typedoc.org/)** - reference doc generation from\n  comments\n- **[Docusaurus](https://docusaurus.io/)** - static site generation for documentation\n\nNow, you should be able to run the common tasks in the following section.\n\n## ✅Common Tasks\n\nOur primary goal is to make it as easy as possible for you to contribute to this project.\nTo that end, we have configured the most common actions to be directly runnable from the root of the project (unless otherwise noted).\n\n### Setup\n\nTo get started, you will need to install the dependencies for the project. To do so, run:\n\n```bash\nyarn\n```\n\n### Linting","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/CONTRIBUTING.md","loc":{"lines":{"from":91,"to":121}}}}],["896d320a-e1d1-47be-b39e-4a8f1fecde74",{"pageContent":"### Setup\n\nTo get started, you will need to install the dependencies for the project. To do so, run:\n\n```bash\nyarn\n```\n\n### Linting\n\nWe use [eslint](https://eslint.org/) to enforce standard lint rules.\nTo run the linter, run:\n\n```bash\nyarn lint\n```\n\nTo automatically fix linting errors, run:\n\n```bash\nyarn lint:fix\n```\n\n### Formatting\n\nWe use [prettier](https://prettier.io) to enforce code formatting style.\nTo run the formatter, run:\n\n```bash\nyarn format\n```\n\nTo just check for formatting differences, without fixing them, run:\n\n```bash\nyarn format:check\n```\n\n### Testing\n\nTests should be added within a `tests/` folder alongside the modules they\nare testing.\n\nTo run all tests, run:\n\n```bash\nyarn test\n```\n\n**Unit tests** cover modular logic that does not require calls to outside APIs.\n\nIf you add new logic, please add a unit test.\nUnit tests should be called `*.test.ts`.\n\nTo run only unit tests, run:\n\n```bash\nyarn test:unit\n```","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/CONTRIBUTING.md","loc":{"lines":{"from":121,"to":179}}}}],["e87a4c11-c096-4f9f-9078-ed5831305ceb",{"pageContent":"If you add new logic, please add a unit test.\nUnit tests should be called `*.test.ts`.\n\nTo run only unit tests, run:\n\n```bash\nyarn test:unit\n```\n\n**Integration tests** cover logic that requires making calls to outside APIs (often integration with other services).\n\nIf you add support for a new external API, please add a new integration test.\nIntegration tests should be called `*.int.test.ts`.\n\nTo run only integration tests, run:\n\n```bash\nyarn test:int\n```\n\nNote that many integration tests require credentials or other setup. You may need to set up a `langchain/.env` file like the example [here](https://github.com/hwchase17/langchainjs/blob/main/langchain/.env.example).\n\n**Environment tests** test whether LangChain works across different JS environments, including Node.js (both ESM and CJS), Edge environments (eg. Cloudflare Workers), and browsers (using Webpack).\n\nTo run the environment tests with Docker run:\n\n```bash\nyarn test:exports:docker\n```\n\n#### Running a single test\n\nTo run a single test, run:","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/CONTRIBUTING.md","loc":{"lines":{"from":179,"to":211}}}}],["5429e502-a66d-462d-a231-97c83903832b",{"pageContent":"To run the environment tests with Docker run:\n\n```bash\nyarn test:exports:docker\n```\n\n#### Running a single test\n\nTo run a single test, run:\n\n```bash\nyarn test:single ./path/to/yourtest.test.ts\n```\n\n### Building\n\nTo build the project, run:\n\n```bash\nyarn build\n```\n\n### Running examples\n\nIf you add a new major piece of functionality, it is helpful to add an\nexample to showcase how to use it. Most of our users find examples to be the\nmost helpful kind of documentation.\n\nExamples can be added in the `examples/src` directory, e.g.\n`examples/src/path/to/example` and should export a `run` function. This\nexample can then be invoked with `yarn example path/to/example` at the top\nlevel of the repo.\n\n### Adding an Entrypoint\n\nLangChain exposes multiple subpaths the user can import from, e.g.\n\n```ts\nimport { OpenAI } from \"langchain/llms/openai\";\n```","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/CONTRIBUTING.md","loc":{"lines":{"from":211,"to":250}}}}],["3f6b025f-942a-447a-86cf-77d9e3990be8",{"pageContent":"### Adding an Entrypoint\n\nLangChain exposes multiple subpaths the user can import from, e.g.\n\n```ts\nimport { OpenAI } from \"langchain/llms/openai\";\n```\n\nWe call these subpaths \"entrypoints\". In general, you should create a new entrypoint if you are adding a new integration with a 3rd party library. If you're adding self-contained functionality without any external dependencies, you can add it to an existing entrypoint.\n\nIn order to declare a new entrypoint that users can import from, you\nshould edit the `langchain/scripts/create-entrypoints.js` script. To add an\nentrypoint `tools` that imports from `tools/index.ts` you'd add\nthe following to the `entrypoints` variable:\n\n```ts\nconst entrypoints = {\n  // ...\n  tools: \"tools/index\",\n};\n```\n\nThis will make sure the entrypoint is included in the published package,\nand in generated documentation.\n\n## Documentation\n\n### Contribute Documentation\n\nDocs are largely autogenerated by [TypeDoc](https://typedoc.org/) from the code.","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/CONTRIBUTING.md","loc":{"lines":{"from":250,"to":279}}}}],["4f658e01-339d-4200-9910-ce175224f969",{"pageContent":"## Documentation\n\n### Contribute Documentation\n\nDocs are largely autogenerated by [TypeDoc](https://typedoc.org/) from the code.\n\nFor that reason, we ask that you add good documentation to all classes and methods.\n\nSimilar to linting, we recognize documentation can be annoying. If you do not want to do it, please contact a project maintainer, and they can help you with it. We do not want this to be a blocker for good code getting contributed.\n\n### Build Documentation Locally\n\nYou can run a hot-reloading dev version of the docs static site by\nrunning:\n\nTo generate and view the documentation locally, run:\n\n```bash\nyarn docs\n```","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/CONTRIBUTING.md","loc":{"lines":{"from":279,"to":298}}}}],["8a329aef-353a-4117-94c1-a3d2fa3a9054",{"pageContent":"# 🦜️🔗 LangChain.js\n\n⚡ Building applications with LLMs through composability ⚡","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/README.md","loc":{"lines":{"from":1,"to":3}}}}],["e3ec1775-4fac-46c4-92b5-5acf2b534537",{"pageContent":"[![CI](https://github.com/hwchase17/langchainjs/actions/workflows/ci.yml/badge.svg)](https://github.com/hwchase17/langchainjs/actions/workflows/ci.yml) ![npm](https://img.shields.io/npm/dw/langchain) [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT) [![Twitter](https://img.shields.io/twitter/url/https/twitter.com/langchainai.svg?style=social&label=Follow%20%40LangChainAI)](https://twitter.com/langchainai) [![](https://dcbadge.vercel.app/api/server/6adMQxSpJS?compact=true&style=flat)](https://discord.gg/6adMQxSpJS) [![Open in Dev Containers](https://img.shields.io/static/v1?label=Dev%20Containers&message=Open&color=blue&logo=visualstudiocode)](https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/hwchase17/langchainjs)","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/README.md","loc":{"lines":{"from":5,"to":5}}}}],["abe90f98-e953-4a79-b0dd-8fd03183de84",{"pageContent":"[<img src=\"https://github.com/codespaces/badge.svg\" title=\"Open in Github Codespace\" width=\"150\" height=\"20\">](https://codespaces.new/hwchase17/langchainjs)","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/README.md","loc":{"lines":{"from":6,"to":6}}}}],["62cd7986-2142-41cd-9b24-c7173a8afff6",{"pageContent":"Looking for the Python version? Check out [LangChain](https://github.com/hwchase17/langchain).\n\n**Production Support:** As you move your LangChains into production, we'd love to offer more comprehensive support.\nPlease fill out [this form](https://forms.gle/57d8AmXBYp8PP8tZA) and we'll set up a dedicated support Slack channel.\n\n## Quick Install\n\n`yarn add langchain`\n\n```typescript\nimport { OpenAI } from \"langchain/llms/openai\";\n```\n\n## Supported Environments\n\nLangChain is written in TypeScript and can be used in:\n\n- Node.js (ESM and CommonJS) - 18.x, 19.x, 20.x\n- Cloudflare Workers\n- Vercel / Next.js (Browser, Serverless and Edge functions)\n- Supabase Edge Functions\n- Browser\n- Deno\n\n## 🤔 What is this?","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/README.md","loc":{"lines":{"from":8,"to":32}}}}],["9b5f78ba-a020-4725-ac6d-96e9d277b3c6",{"pageContent":"- Node.js (ESM and CommonJS) - 18.x, 19.x, 20.x\n- Cloudflare Workers\n- Vercel / Next.js (Browser, Serverless and Edge functions)\n- Supabase Edge Functions\n- Browser\n- Deno\n\n## 🤔 What is this?\n\nLarge language models (LLMs) are emerging as a transformative technology, enabling\ndevelopers to build applications that they previously could not.\nBut using these LLMs in isolation is often not enough to\ncreate a truly powerful app - the real power comes when you can combine them with other sources of computation or knowledge.\n\nThis library is aimed at assisting in the development of those types of applications.\n\n## 📖 Full Documentation\n\nFor full documentation of prompts, chains, agents and more, please see [here](https://js.langchain.com/docs/).\n\n## Relationship with Python LangChain","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/README.md","loc":{"lines":{"from":32,"to":52}}}}],["87b1b96f-bb57-4f85-b475-9512cafa0aa6",{"pageContent":"## 📖 Full Documentation\n\nFor full documentation of prompts, chains, agents and more, please see [here](https://js.langchain.com/docs/).\n\n## Relationship with Python LangChain\n\nThis is built to integrate as seamlessly as possible with the [LangChain Python package](https://github.com/hwchase17/langchain). Specifically, this means all objects (prompts, LLMs, chains, etc) are designed in a way where they can be serialized and shared between languages.\n\nThe [LangChainHub](https://github.com/hwchase17/langchain-hub) is a central place for the serialized versions of these prompts, chains, and agents.\n\n## 💁 Contributing\n\nAs an open source project in a rapidly developing field, we are extremely open to contributions, whether it be in the form of a new feature, improved infra, or better documentation.\n\nCheck out [our contributing guidelines](CONTRIBUTING.md) for instructions on how to contribute.","metadata":{"source":"https://github.com/hwchase17/langchainjs/blob/e6bc8ca42dfe747a5eb97341a924c39830d2d0d2/README.md","loc":{"lines":{"from":52,"to":66}}}}]],{"0":"e290ba50-51cf-485f-bf19-fc1005982d45","1":"f6894556-908d-4ef3-b30f-11a7a671ef44","2":"66433605-c8de-4a25-afb4-5aa0229a8ad9","3":"152380e0-1214-43cb-81df-76b8b756707f","4":"35413d6b-1042-4b49-8f33-49885d74ed9a","5":"5e9eba72-8582-413c-be6f-93e94afb66b3","6":"e3c3d2a7-a77b-4551-81c4-4991d9a451c1","7":"fda6bf27-9ee4-482c-afa0-b51ed41d2921","8":"896d320a-e1d1-47be-b39e-4a8f1fecde74","9":"e87a4c11-c096-4f9f-9078-ed5831305ceb","10":"5429e502-a66d-462d-a231-97c83903832b","11":"3f6b025f-942a-447a-86cf-77d9e3990be8","12":"4f658e01-339d-4200-9910-ce175224f969","13":"8a329aef-353a-4117-94c1-a3d2fa3a9054","14":"e3ec1775-4fac-46c4-92b5-5acf2b534537","15":"abe90f98-e953-4a79-b0dd-8fd03183de84","16":"62cd7986-2142-41cd-9b24-c7173a8afff6","17":"9b5f78ba-a020-4725-ac6d-96e9d277b3c6","18":"87b1b96f-bb57-4f85-b475-9512cafa0aa6"}]